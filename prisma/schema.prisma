// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id    Int     @id @default(autoincrement())
  email String  @unique
  name  String?
  posts Post[]
}

model Post {
  id        Int     @id @default(autoincrement())
  title     String
  content   String?
  published Boolean @default(false)
  author    User    @relation(fields: [authorId], references: [id])
  authorId  Int
}

// model User {
//   id        Int      @id @default(autoincrement())
//   name      String
//   email     String   @unique
//   password  String
//   point     Int
//   orders    Order[]
//   createdAt DateTime @default(now())
//   updatedAt DateTime @updatedAt
// }

// model Book {
//   id         Int         @id @default(autoincrement())
//   title      String
//   writer     String
//   cover      String
//   price      Int
//   orderItems OrderItem[]
//   bookTags   BookTag[]
//   createdAt  DateTime    @default(now())
//   updatedAt  DateTime    @updatedAt
// }

// model BookTag {
//   id        Int      @id @default(autoincrement())
//   book      Book     @relation(fields: [bookId], references: [id])
//   bookId    Int
//   tag       Tag      @relation(fields: [tagId], references: [id])
//   tagId     Int
//   createdAt DateTime @default(now())
//   updatedAt DateTime @updatedAt
// }

// model Tag {
//   id        Int       @id @default(autoincrement())
//   name      String
//   bookTags  BookTag[]
//   createdAt DateTime  @default(now())
//   updatedAt DateTime  @updatedAt
// }

// model Order {
//   id         Int         @id @default(autoincrement())
//   user       User        @relation(fields: [userId], references: [id])
//   userId     Int
//   total      Int
//   paid       Int
//   orderItems OrderItem[]
//   createdAt  DateTime    @default(now())
//   updatedAt  DateTime    @updatedAt
// }

// model OrderItem {
//   id        Int      @id @default(autoincrement())
//   order     Order    @relation(fields: [orderId], references: [id])
//   orderId   Int
//   book      Book     @relation(fields: [bookId], references: [id])
//   bookId    Int
//   quantity  Int
//   subTotal  Int
//   createdAt DateTime @default(now())
//   updatedAt DateTime @updatedAt
// }
